<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Record_System.Resources.Controls.NavigationViewItemPresenter" 
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals">

    <Style TargetType="NavigationViewItemPresenter" x:Key="ApplicationNavigationViewItemPresenterStyle">
        <Setter Property="Foreground" Value="{ThemeResource TopNavigationViewItemForeground}" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NavigationViewItemPresenter">
                    <Grid x:Name="LayoutRoot" Margin="{StaticResource NavigationViewItemButtonMargin}" Control.IsTemplateFocusTarget="True" CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid.Resources />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{StaticResource WhiteColor50}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="Icon.(AnimatedIcon.State)" Value="PointerOver" />

                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{StaticResource WhiteColor30}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                                        <Setter Target="Icon.(AnimatedIcon.State)" Value="Pressed" />

                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelected}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{StaticResource BlackColor}" />
                                        <Setter Target="Icon.Foreground" Value="{StaticResource BlackColor}" />

                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PointerOverSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{StaticResource BlackColor}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{StaticResource BlackColor}" />
                                        <Setter Target="Icon.(AnimatedIcon.State)" Value="PointerOver" />

                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{StaticResource BlackColor}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{StaticResource BlackColor}" />
                                        <Setter Target="Icon.(AnimatedIcon.State)" Value="Pressed" />

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled" />

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                            <!--<VisualStateGroup x:Name="NavigationViewIconPositionStates">
                                <VisualState x:Name="IconOnLeft" />
                                <VisualState x:Name="IconOnly">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Width" Value="36" />
                                        <Setter Target="LayoutRoot.Height" Value="36" />
                                        <Setter Target="LayoutRoot.Margin" Value="2" />
                                        <Setter Target="IconBox.Margin" Value="10,0" />
                                        <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                                        --><!--<Setter Target="SelectionIndicatorGrid.Margin" Value="0" />-->
                                        <!--<Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource TopNavigationViewItemIconOnlyExpandChevronMargin}" />--><!--

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ContentOnly">
                                    <VisualState.Setters>
                                        <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                        <Setter Target="ContentPresenter.Margin" Value="{ThemeResource TopNavigationViewItemContentOnlyContentPresenterMargin}" />
                                        --><!--<Setter Target="SelectionIndicatorGrid.Margin" Value="12,0,12,4" />-->
                                        <!--<Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource TopNavigationViewItemContentOnlyExpandChevronMargin}" />--><!--

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>-->
                            
                            <!--<VisualStateGroup x:Name="InfoBadgeStates">
                                <VisualState x:Name="InfoBadgeVisible" />
                                <VisualState x:Name="InfoBadgeCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="InfoBadgePresenter.Visibility" Value="Collapsed" />

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>-->
                            
                            <!--<VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden" />
                                <VisualState x:Name="ChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PointerChevronStates">
                                <VisualState x:Name="NormalChevronHidden" />
                                <VisualState x:Name="NormalChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(AnimatedIcon.State)" Value="NormalOn" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NormalChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(AnimatedIcon.State)" Value="NormalOff" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(AnimatedIcon.State)" Value="PointerOverOff" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ExpandCollapseChevronIcon.(AnimatedIcon.State)" Value="PointerOverOn" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ExpandCollapseChevronIcon.(AnimatedIcon.State)" Value="PointerOverOff" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(AnimatedIcon.State)" Value="PressedOff" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="ExpandCollapseChevronIcon.(AnimatedIcon.State)" Value="PressedOn" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="ExpandCollapseChevronIcon.(AnimatedIcon.State)" Value="PressedOff" />

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>-->

                        </VisualStateManager.VisualStateGroups>
                        
                        <!-- POINTER RECTANGLE Shows Pointer States Of The Item-->
                        
                        <!--<Rectangle 
                            x:Name="PointerRectangle" 
                            Fill="Transparent" 
                            Visibility="Collapsed" 
                        />-->

                        <Grid 
                            x:Name="ContentGrid">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>

                                <RowDefinition
                                    Height="Auto"
                                />

                                <RowDefinition
                                    Height="Auto"
                                />

                            </Grid.RowDefinitions>
                            
                            <Grid 
                                Grid.RowSpan="2"
                                x:Name="SelectionIndicatorGrid" 
                                VerticalAlignment="Stretch" 
                                CornerRadius="20"
                                HorizontalAlignment="Stretch">
                            
                                <Rectangle 
                                    x:Name="SelectionIndicator" 
                                    Fill="{StaticResource WhiteColor}"
                                    Opacity="0"
                                    RadiusX="2" 
                                    RadiusY="2" 
                                />

                            </Grid>

                            <Viewbox 
                                x:Name="IconBox" 
                                VerticalAlignment="Center" 
                                Margin="22 5"
                                HorizontalAlignment="Center">
                                
                                <ContentPresenter 
                                    x:Name="Icon" 
                                    Content="{TemplateBinding Icon}" 
                                    Foreground="{TemplateBinding Foreground}" 
                                    local:AnimatedIcon.State="Normal" 
                                    xmlns:local="using:Microsoft.UI.Xaml.Controls" 
                                />
                                
                            </Viewbox>

                            <ContentPresenter 
                                x:Name="ContentPresenter" 
                                Grid.Row="1" 
                                Visibility="Collapsed"
                                TextWrapping="NoWrap" 
                                Foreground="{TemplateBinding Foreground}" 
                                ContentTransitions="{TemplateBinding ContentTransitions}" 
                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                Content="{TemplateBinding Content}" 
                                HorizontalAlignment="Center" 
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" 
                                FontSize="11"
                                AutomationProperties.AccessibilityView="Raw" 
                                FontFamily="{StaticResource DMMonoRegular}"
                            />

                            <!-- EXPAND COLLAPSE CHEVRON-->
                            <!-- After Enabling this make sure you locate the position of the chevron-->

                            <!--<Grid 
                                x:Name="ExpandCollapseChevron" 
                                Grid.Column="2" 
                                Visibility="Collapsed" 
                                HorizontalAlignment="Right" 
                                Width="40" 
                                Margin="{ThemeResource TopNavigationViewItemExpandChevronMargin}" 
                                Background="Transparent">
                                
                                <AnimatedIcon 
                                    Width="12" 
                                    Height="12" 
                                    RenderTransformOrigin="0.5, 0.5" 
                                    x:Name="ExpandCollapseChevronIcon" 
                                    Foreground="{ThemeResource NavigationViewItemForeground}" 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" 
                                    AutomationProperties.AccessibilityView="Raw" 
                                    local:AnimatedIcon.State="NormalOff" 
                                    xmlns:local="using:Microsoft.UI.Xaml.Controls">
                                    
                                    <animatedvisuals:AnimatedChevronUpDownSmallVisualSource 
                                    />
                                    
                                    <AnimatedIcon.FallbackIconSource>
                                        
                                        <FontIconSource 
                                            Foreground="{ThemeResource NavigationViewItemForeground}" 
                                            FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}" 
                                            Glyph="{StaticResource NavigationViewItemExpandedGlyph}" 
                                            FontFamily="{StaticResource SymbolThemeFontFamily}" 
                                        />
                                        
                                    </AnimatedIcon.FallbackIconSource>

                                    <AnimatedIcon.RenderTransform 
                                    />

                                </AnimatedIcon>

                            </Grid>-->

                            <!-- INFO BADGE -->

                            <!--<ContentPresenter 
                                x:Name="InfoBadgePresenter" 
                                Grid.Column="1" 
                                VerticalAlignment="Center" 
                                HorizontalAlignment="Center" 
                                Margin="-16,0,2,13" 
                                Content="{TemplateBinding InfoBadge}" 
                            />-->

                        </Grid>
                        
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
